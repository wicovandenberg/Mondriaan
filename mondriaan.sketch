let version = "0.4";
let canvasWidth = 750;
let canvasHeight = 750;
let planes = [];

function setup() {
  
  let canvas = createCanvas(canvasWidth, canvasHeight);
  
  //if on website
  if (window.jQuery) { 
    canvasWidth = 600;
    canvasHeight = 600;
    resizeCanvas(canvasWidth, canvasHeight);
    canvas.parent('p5js');
    console.log('version: ' + version);
  }
  
  p5init();
}
function p5init() {
  background(255);
  //noStroke();
  planes = [0];
  divideRectangles();
}

function draw() {
  
}
function divideRectangles() {
  /*
  algorithm
  There is a small change on doing a cross section (split in 4 at once), maybe 10%
  and else it's a single split in 2.
  */
  
  //first rectangle is full canvas
  fill(70);
  planes[0] = new Plane(0,0,canvasWidth,canvasHeight); 
  //planes[0] = new Plane(25,25,600,600); 
  
  
  let selPlane = planes[0];
  //flip a coin for horizontal or vertical split
  if ((random() < 0.5) == true) {
    orientation = "horizontal";
  } else {
    orientation = "vertical";
  }
  y = selPlane.y;
  height = selPlane.height;
  splitPosY = Math.round(random(y+10,y + height-10));
  //splitPosY = 623;
  console.log('splitPosY: '+splitPosY);
  x = selPlane.x;
  width = selPlane.width;
  splitPosX = Math.round(random(x+10,x + width-10));
  //splitPosX = 623;
  console.log('splitPosX: '+splitPosX);
  console.log('1: ' + JSON.stringify(planes));
  splitPane(selPlane,"both",splitPosX,splitPosY);
  console.log('2: ' + JSON.stringify(planes));
  planes.splice(0,1);
  console.log('3: ' + JSON.stringify(planes));
  
  
  for (let i = 0; i < 5; i++) {
    p = planes[0];
    y = p.y;
    height = p.height;
    splitPosY = Math.round(random(y+10,y + height-10));
    //splitPosY = 35;
    console.log('splitPosY: '+splitPosY);
    x = p.x;
    width = p.width;
    splitPosX = Math.round(random(x+10,x + width-10));
    //splitPosX = 35;
    console.log('splitPosX: '+splitPosX);

     if ((random() < 0.5) == true) {
      orientation = "horizontal";
    } else {
      orientation = "vertical";
    }
    
    splitPane(p,orientation,splitPosX,splitPosY);
    console.log('4-' + i + ': ' + JSON.stringify(planes));
    planes.splice(0,1);
  }
  console.log('5:' + JSON.stringify(planes));
  
}
function splitPane(plane, orientation, splitPosX,splitPosY) {
  if (orientation === "horizontal") {
    p1 = new Plane(plane.x,plane.y,plane.width,splitPosY-plane.y);
    p2 = new Plane(plane.x,splitPosY,plane.width,plane.height - splitPosY + plane.y);
    planes.push(p1);
    planes.push(p2);
  } else if (orientation === "vertical") {
    console.log('split from: ' + JSON.stringify(plane));
    p1 = new Plane(plane.x,plane.y,splitPosX-plane.x,plane.height);
    p2 = new Plane(splitPosX,plane.y,plane.width-splitPosX+plane.x,plane.height);
    planes.push(p1);
    planes.push(p2);
  } else {
    p1 = new Plane(plane.x,plane.y,splitPosX-plane.x,splitPosY-plane.y);
    p2 = new Plane(splitPosX,plane.y,plane.x+plane.width-splitPosX,splitPosY-plane.y);
    p3 = new Plane(plane.x,splitPosY,splitPosX-plane.x,plane.height-splitPosY+plane.y);
    p4 = new Plane(splitPosX,splitPosY,plane.x+plane.width-splitPosX,plane.height-splitPosY+plane.y);
    planes.push(p1);
    planes.push(p2);
    planes.push(p3);
    planes.push(p4);
  }
  
}
function Plane(x,y,width,height) {  
  this.x=x;  
  this.y=y;  
  this.width=width;  
  this.height=height; 
  fill(random(255),random(255),random(255),210);
  rect(x,y,width,height);
  this.setColor=setColor;  
  function setColor(color) {  
    this.color=color;  
  }
}  